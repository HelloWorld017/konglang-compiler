// 0 : Boolean, Loop Tracker
(2 - 2) { 2 - 2

// 21 : Char, Space (32)
(22 - 2 / 2) { 2 * 2 * 2 * 2 * 2

// 22 : Char, Line Break (13)
(22) { 2 * 2 * 2 * 2 - 2 - 2 / 2

// 23 : Char, Number 0 (48)
(22 + 2 / 2) { 22 * 2 + 2 * 2

// 24 : Integer, 10
(22 + 2) { 2 * 2 * 2 + 2

// 222 : Array, Max Index
// 223 ~ : Integer, Array Value
(222) { 222 + 2 / 2

<2 - 2> [
	// 2: Char, Input
	(2) { <#>
	
	// 3 : Boolean, IsLineEnded
	(2 + 2 / 2) { <2> - <22>
	
	// Set zero if line ended
	(2 - 2) { 2 - 2
	<2 + 2 / 2> [
		(2 - 2) { 2 / 2
		(2 + 2 / 2) { 2 / 2
	]
	
	// 6 : Boolean, 0 Fork
	(2 + 2 + 2) { <2 - 2>
	
	// Run if !IsLineEnded
	<2 + 2 + 2> [
		// 4 : Boolean, IsSpace
		(2 + 2) { <2> - <22 - 2 / 2>
		
		// 5 :  Boolean, IsNumber
		(2 + 2 + 2 / 2) { 2 - 2
		
		<2 + 2> [
			// Index Move
			(222) { <222> + 2 / 2
			(2 + 2) { 2 / 2
			
			(2 + 2 + 2 / 2) { 2 / 2
		]
		
		// Add Number if IsNumber
		<2 + 2 + 2 / 2> [
			(<222>) { <<222>> * <22 + 2> + <2> - <22 + 2 / 2>
			
			(2 + 2 + 2 / 2) { 2 / 2
		]
		
		(2 + 2 + 2) { 2 / 2
	]
]

// 7 : Integer, Tracker
(2 * 2 * 2 - 2 / 2) { 2 + 2 + 2

// 8 : Integer, Iterator
(2 * 2 * 2) { 222

// 9 : Boolean, IsLoopEnded
(2 * 2 * 2 + 2 / 2) { 2 - 2

<2 * 2 * 2 + 2 / 2> [
	(2 * 2 * 2) { <2 * 2 * 2> + 2 / 2
	
	// 10 : Boolean, IsBreak
	(2 * 2 * 2 + 2) { 2 * 2 * 2 - 2 / 2 - <2 * 2 * 2 - 2 / 2>
	
	<2 * 2 * 2 + 2> [
		(2 * 2 * 2 - 2 / 2) { 2 - 2
		(#) { <22>
		(#) { <22 + 2>
		(2 * 2 * 2 + 2) { 2 / 2
	]
	
	// 12 : Boolean, IsMoreThan10
	(2 * 2 * 2 + 2 * 2) { 2 / 2
	
	// 13 : Boolean, IteratorOfIsMoreThan10
	(2 * 2 * 2 + 2 * 2 + 2 / 2) { 2 - 2
	
	// 14 : Integer, TrackerOfIsMoreThan10
	(2 * 2 * 2 + 2 * 2 + 2) { 2 - 2

	<2 * 2 * 2 + 2 * 2 + 2 / 2> [
		//15 : Boolean, IsNumberEqualToTracker
		(2 * 2 * 2 * 2 - 2 / 2) { <<2 * 2 * 2>> - <2 * 2 * 2 + 2 * 2 + 2>
		
		<2 * 2 * 2 * 2 - 2 / 2> [
			// End Loop
			(2 * 2 * 2 + 2 * 2 + 2 / 2) { 2 / 2
			(2 * 2 * 2 * 2 - 2 / 2) { 2 / 2
		]
		
		//16 : Boolean, IsTrackerEqualTo10
		(2 * 2 * 2 * 2) { <22 + 2> - <2 * 2 * 2 + 2 * 2 + 2>
		<2 * 2 * 2 * 2> [
			// IsMoreThan10 is True
			(2 * 2 * 2 + 2 * 2) { 2 - 2
			
			//End Loop
			(2 * 2 * 2 * 2) { 2 / 2
			(2 * 2 * 2 + 2 * 2 + 2 / 2) { 2 / 2
		]
		
		// Update TrackerOfIsLessThan10
		(2 * 2 * 2 + 2 * 2 + 2) { <2 * 2 * 2 + 2 * 2 + 2> + 2 / 2
	]
	
	// Print number if number is more than 10
	<2 * 2 * 2 + 2 * 2> [
		//2222 : Integer, First Number
		(2222) { 2 - 2
		
		// 2224: Boolean, IteratorOfIsMoreThan10
		(2222 + 2) { 2 - 2
		
		// 2225: Boolean, TrackerOfIsMoreThan10
		(2222 + 2 + 2 / 2) { 2 - 2
		
		// 22222: Boolean, IterateeOfIsMoreThan10
		(22222) { 2 - 2
		
		<2222 + 2> [
			// 2226: Boolean, IsNumberEqualToIteratee
			(2222 + 2 * 2) { <<2 * 2 * 2>> - <22222>
			<2222 + 2 * 2> [
				(2222 + 2) { 2 / 2
				(2222 + 2 * 2) { 2 / 2
			]
			
			//2230: Boolean, IsTrackerEqualTo10
			(2222 + 2 * 2 * 2) { <22 + 2> - <2222 + 2 + 2 / 2>
			
			<2222 + 2 * 2 * 2> [
				// First Number++
				(2222) { <2222> + 2 / 2
				
				// Reset Tracker
				(2222 + 2 + 2 / 2) { 2 - 2
				
				(2222 + 2 * 2 * 2) { 2 / 2
			]
			
			(2222 + 2 + 2 / 2) { <2222 + 2 + 2 / 2> + 2 / 2
			(22222) { <22222> + 2 / 2
		]
		
		(#) { <22 + 2 / 2> + <2222>
		(#) { <22 + 2 / 2> + <<2 * 2 * 2>> - <2222> * <22 + 2>
		
		(2 * 2 * 2 + 2 * 2) { 2
	]
	
	//17 : Boolean, Not IsMoreThan10
	(2 * 2 * 2 * 2 + 2 / 2) { <2 * 2 * 2 + 2 * 2> - 2 / 2
	
	// Print number if number is less than 10
	<2 * 2 * 2 * 2 + 2 / 2> [
		(#) { <22 + 2 / 2> + <<2 * 2 * 2>>
		(#) { <22 - 2 / 2>
		(2 * 2 * 2 * 2 + 2 / 2) { 2 / 2
	]
	
	// Print space
	(#) { <22 - 2 / 2>
	
	// Update Tracker
	(2 * 2 * 2 - 2 / 2) { <2 * 2 * 2 - 2 / 2> + 2 / 2
	
	// 11: Boolean, Not IsLoopEnded
	
	(2 * 2 * 2 + 2 + 2 / 2) { <222> - <2 * 2 * 2>
	
	<2 * 2 * 2 + 2 + 2 / 2> [
		(2 * 2 * 2 + 2 / 2) { 2 / 2
		(2 * 2 * 2 + 2 + 2 / 2) { 2 / 2
	]
]